# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2

jobs:
  build_backend:
    branches:
      only:
        -master
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "centersystem/pom.xml" }}
            # fallback to using the latest cache if no exact match is found

      - run:
          name: Save maven dependencies
          command: |
            cd centersystem
            mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "centersystem/pom.xml" }}
      - run:
          name: Compile app
          command: |
            cd centersystem
            mvn compile -T4

  test_backend:
    branches:
        only:
          -master
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      - image: circleci/mysql:5.7.28
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: clinic_center

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "centersystem/pom.xml" }}
            # fallback to using the latest cache if no exact match is found

      - run:
          name: Save maven dependencies
          command: |
            cd centersystem
            mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "centersystem/pom.xml" }}

      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 30`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL CLI; Import dummy data;
          command: |
            sudo apt update
            sudo apt install mysql-client

      - run:
          name: Run tests
          command: |
            cd centersystem
            mvn test

  build_front:
    branches:
      only:
        -master
    docker:
      # specify the version you desire here
      - image: circleci/node:12.14.0

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - run:
          name: Update npm
          command: "sudo npm install -g npm@latest"
      # Download and cache dependencies
      - restore_cache:
          key: dependency-cache-{{ checksum "client/package-lock.json" }}
      - run:
          name: Install node modules
          command: |
            cd client
            npm install
      - save_cache:
          key: dependency-cache-{{ checksum "client/package-lock.json" }}
          paths:
            - client/node_modules

workflows:
  version: 2
  build_and_test:
    jobs:
      - build_backend
      # dok ne skontamo kako da napravimo da radi za unit testove ovo dole ostaje zakomentarisano (ptreba kreirati bazu podataka prije ubacivanja podataka, ali ona se tek kreira kad se pokrene app odnosno testovi)
      #- test_backend:
      #requires:
      #- build
      - build_front
